// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using Microsoft.Data.SqlClient;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;
using System.Data;
using System.Linq;
using System.Threading;
using System.Threading.Tasks;
using UspJsonTest.Models;

namespace UspJsonTest.Data
{
    public partial class AppDbContext
    {
        private AppDbContextProcedures _procedures;

        public virtual AppDbContextProcedures Procedures
        {
            get
            {
                if (_procedures is null) _procedures = new AppDbContextProcedures(this);
                return _procedures;
            }
            set
            {
                _procedures = value;
            }
        }

        public AppDbContextProcedures GetProcedures()
        {
            return Procedures;
        }

        protected void OnModelCreatingGeneratedProcedures(ModelBuilder modelBuilder)
        {
            modelBuilder.Entity<Sp_Json_Result>().HasNoKey().ToView(null);
            modelBuilder.Entity<Sp_Json_Result>().HasNoKey().ToView(null);
        }
    }

    public interface IAppDbContextProceduresContract
    {
        Task<List<Sp_Json_Result>> sp_get_stateAsync(int? StateId, CancellationToken cancellationToken = default);
        Task<List<Sp_Json_Result>> sp_get_tblCustomerAsync(int? cutomerId, CancellationToken cancellationToken = default);
    }

    public partial class AppDbContextProcedures
    {
        private readonly AppDbContext _context;

        public AppDbContextProcedures(AppDbContext context)
        {
            _context = context;
        }

        public virtual async Task<string> sp_get_stateAsync(int? StateId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new[]
            {
                new SqlParameter
                {
                    ParameterName = "StateId",
                    Value = StateId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<Sp_Json_Result>("EXEC @returnValue = [dbo].[sp_get_state] @StateId", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _.FirstOrDefault().json;
        }
        public virtual async Task<List<Sp_Json_Result>> sp_get_tblCustomerAsync(int? cutomerId, OutputParameter<int> returnValue = null, CancellationToken cancellationToken = default)
        {
            var parameterreturnValue = new SqlParameter
            {
                ParameterName = "returnValue",
                Direction = System.Data.ParameterDirection.Output,
                SqlDbType = System.Data.SqlDbType.Int,
            };

            var sqlParameters = new []
            {
                new SqlParameter
                {
                    ParameterName = "cutomerId",
                    Value = cutomerId ?? Convert.DBNull,
                    SqlDbType = System.Data.SqlDbType.Int,
                },
                parameterreturnValue,
            };
            var _ = await _context.SqlQueryAsync<Sp_Json_Result>("EXEC @returnValue = [dbo].[sp_get_tblCustomer] @cutomerId", sqlParameters, cancellationToken);

            returnValue?.SetValue(parameterreturnValue.Value);

            return _;
        }
    }
}
